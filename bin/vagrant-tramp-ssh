#!/bin/bash

if [ "$(uname -s)" == "Darwin" ]
then
  if [ -d "/Applications/VMWare Fusion.app" ]
  then
    type="fusion"
    PATH="/Applications/VMware Fusion.app/Contents/Library:$PATH"
  elif [ -d "/Applications/VirtualBox.app" ]
  then
    type="virtualbox"
  else
    type="Unknown"
  fi
else
    # If VBoxManage exists on the PATH, assume virtualbox
    if hash VBoxManage 2>/dev/null; then
        type="virtualbox"
    else
        type="ws"
    fi
fi

function vm_dir() {
  dir=$(dirname $(dirname $1))

  while [ "$dir" != "/" ]
  do
    if [ -e "$dir/Vagrantfile" ]
    then
      echo $dir
      break
    fi
    dir=$(dirname $dir)
  done
}

function vm_name() {
  path=$1
  # extract $name from: /.../.vagrant/machines/$name/provider/uuid/box.vmx
  for _ in {1..3}
  do
    path=$(dirname $path)
  done
  basename $path
}

function vm_list() {
  dir=$(basename $1)
  name=$2

  if [ "$name" == "default" ]
  then
    echo $dir
  else
    if [ "$type" == "virtualbox" ]
    then
      echo "$name"
    else
      echo "$dir-$name"
    fi
  fi
}

function vm_ssh() {
  dir=$1
  name=$2
  box_name=$(basename $dir)
  if [[ "$type" == "virtualbox" ]]
  then
    # VirtualBox box names are given as "directory_vmname", once in
    # "directory" we want to invoke "vagrant ssh" with "vmname"
    name=$(echo $name | cut -d'_' -f2)
  fi

  if [[ "$vm_name" == "$box_name-$name" ]] ||
     [[ "$vm_name" == "$box_name" && "$name" == "default" ]] ||
     [[ "$type" == "virtualbox" ]]
  then
    cd $dir
    exec "vagrant" "ssh" "$name"
  fi
}

if [ "$1" == "" ]
then
  vm_func=vm_list
else
  vm_func=vm_ssh
  target_vm_name=$1
fi

if [ "$type" == "virtualbox" ]
then
  # Virtualbox Assumptions
  # * VM Box name in Default Vagrant Format
  #    Ex: (DirContainingVagrantFile_vmname_timestamp)
  # * That a shared folder is setup for the directory containing the
  #   VM's Vagrantfile
  for vm_running in $(VBoxManage list runningvms | sed 's/^"\([^"]*\).*/\1/')
  do
    # We report names as "directory_vmname"
    vm_name=$(echo $vm_running | cut -d'_' -f1,2)
    # If target_vm_name is set, we are looking for a certain vm.
    if [ -n "$target_vm_name" ] && [ "$vm_name" != "$target_vm_name" ]
    then
      continue
    fi

    dir="$(VBoxManage showvminfo $vm_running --machinereadable | grep SharedFolderPathMachineMapping1 | sed 's/[^=]*\="\([^"]*\).*/\1/')"

    if [ "$dir" != "" ] && [ "$vm_name" != "" ]  && [ -e "$dir/Vagrantfile" ]
    then
      $vm_func $dir $vm_name
    fi
  done
else
  # VMware Fusion
  for vmx in $(vmrun -T $type list | grep -v ^Total)
  do
    dir=$(vm_dir $vmx)

    if [ "$dir" != "" ]
    then
      $vm_func $dir $(vm_name $vmx)
    fi
  done
fi
